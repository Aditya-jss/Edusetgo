rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Orders: Users can create and read their own orders
    match /orders/{orderId} {
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && 
                           resource.data.userId == request.auth.uid;
    }
    
    // Applications: Users can read their own, admins can read/write all
    match /applications/{applicationId} {
      allow read: if request.auth != null && 
                   request.auth.uid == resource.data.userId;
      
      allow write: if request.auth != null && 
                    exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Notes: Users can read their own, admins can read/write all
    match /notes/{noteId} {
      allow read: if request.auth != null && 
                   request.auth.uid == resource.data.userId;
      
      allow write: if request.auth != null && 
                    exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Admin-only collections or documents
    match /{document=**} {
      allow read, write: if request.auth != null && 
                           exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
